# Xcode
#
# gitignore contributors: remember to update Global/Xcode.gitignore, Objective-C.gitignore & Swift.gitignore

## User settings
xcuserdata/

## compatibility with Xcode 8 and earlier (ignoring not required starting Xcode 9)
*.xcscmblueprint
*.xccheckout

## compatibility with Xcode 3 and earlier (ignoring not required starting Xcode 4)
build/
DerivedData/
*.moved-aside
*.pbxuser
!default.pbxuser
*.mode1v3
!default.mode1v3
*.mode2v3
!default.mode2v3
*.perspectivev3
!default.perspectivev3

## Obj-C/Swift specific
*.hmap

## App packaging
*.ipa
*.dSYM.zip
*.dSYM

## Playgrounds
timeline.xctimeline
playground.xcworkspace

# Swift Package Manager
#
# Add this line if you want to avoid checking in source code from Swift Package Manager dependencies.
# Packages/
# Package.pins
# Package.resolved
# *.xcodeproj
#
# Xcode automatically generates this directory with a .xcworkspacedata file and xcuserdata
# hence it is not needed unless you have added a package configuration file to your project
# .swiftpm

.build/

# CocoaPods
#
# We recommend against adding the Pods directory to your .gitignore. However
# you should judge for yourself, the pros and cons are mentioned at:
# https://guides.cocoapods.org/using/using-cocoapods.html#should-i-check-the-pods-directory-into-source-control
#
# Pods/
#
# Add this line if you want to avoid checking in source code from the Xcode workspace
# *.xcworkspace

# Carthage
#
# Add this line if you want to avoid checking in source code from Carthage dependencies.
# Carthage/Checkouts

Carthage/Build/

# Accio dependency management
Dependencies/
.accio/

# fastlane
#
# It is recommended to not store the screenshots in the git repo.
# Instead, use fastlane to re-generate the screenshots whenever they are needed.
# For more information about the recommended setup visit:
# https://docs.fastlane.tools/best-practices/source-control/

fastlane/report.xml
fastlane/Preview.html
fastlane/screenshots/**/*.png
fastlane/test_output

# Code Injection
#
# After new code Injection tools there's a generated folder /iOSInjectionProject
# https://github.com/johnno1962/injectionforxcode

iOSInjectionProject/

# macOS
.DS_Store
.AppleDouble
.LSOverride

# Icon must end with two \r
Icon

# Thumbnails
._*

# Files that might appear in the root of a volume
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent

# Directories potentially created on remote AFP share
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

# Swift Package Manager
.build/
Packages/
Package.pins
Package.resolved
*.xcodeproj
.swiftpm

# Xcode
*.xcworkspace
!default.xcworkspace
xcuserdata/
*.xcscmblueprint
*.xccheckout
build/
DerivedData/
*.moved-aside
*.pbxuser
!default.pbxuser
*.mode1v3
!default.mode1v3
*.mode2v3
!default.mode2v3
*.perspectivev3
!default.perspectivev3
*.hmap
*.ipa
*.dSYM.zip
*.dSYM

# Playgrounds
timeline.xctimeline
playground.xcworkspace

# Logs
*.log

# Temporary files
*.swp
*.swo
*.tmp
*.temp

# Editor files
.vscode/
.idea/
*.swp
*.swo
*~

# Backup files
*.bak
*.backup

# Test coverage
*.profdata
*.gcda
*.gcno

# Test results
TestResults/

# Other
*.orig
*.rej

# Python cache (if any Python scripts are used)
__pycache__/
*.pyc
*.pyo
*.pyd
.Python
env/
venv/
ENV/

# Node.js (if any Node.js tools are used)
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Ruby (if any Ruby tools are used)
*.gem
*.rbc
/.config
/coverage/
/InstalledFiles
/pkg/
/spec/reports/
/spec/examples.txt
/test/tmp/
/test/version_tmp/
/tmp/

# Ignore SPM generated files
.swiftpm/xcode/package.xcworkspace/
.artifacts/

# Ignore any local configuration files
.env
.env.local
.env.*.local

# Ignore any generated documentation
docs/_build/
docs/api/

# Ignore any performance profiling data
*.trace
*.trace-pid

# Ignore any crash logs
*.crash
*.ips

# Ignore any app signing files
*.mobileprovision
*.p12
*.p8

# Ignore any app store connect files
*.itmsp
*.itpc

# Ignore any fastlane files
fastlane/report.xml
fastlane/Preview.html
fastlane/screenshots/**/*.png
fastlane/test_output

# Ignore any code coverage files
*.coverage
*.lcov
coverage.xml

# Ignore any dependency lock files (optional - uncomment if you want to ignore them)
# Package.resolved
# Podfile.lock
# Cartfile.resolved
# yarn.lock
# package-lock.json 